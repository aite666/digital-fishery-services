<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digital.fishery.mapper.DeviceNodeMapper">
  <resultMap id="BaseResultMap" type="com.digital.fishery.model.DeviceNode">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="device_addr" jdbcType="INTEGER" property="deviceAddr" />
    <result column="record_time" jdbcType="TIMESTAMP" property="recordTime" />
    <result column="node_id" jdbcType="INTEGER" property="nodeId" />
    <result column="lng" jdbcType="DOUBLE" property="lng" />
    <result column="lat" jdbcType="DOUBLE" property="lat" />
    <result column="record_id" jdbcType="VARCHAR" property="recordId" />
    <result column="record_time_str" jdbcType="VARCHAR" property="recordTimeStr" />
    <result column="register_id" jdbcType="INTEGER" property="registerId" />
    <result column="register_name" jdbcType="VARCHAR" property="registerName" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="value" jdbcType="DOUBLE" property="value" />
    <result column="alarm_level" jdbcType="INTEGER" property="alarmLevel" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="block_id" jdbcType="BIGINT" property="blockId" />
    <result column="block_name" jdbcType="VARCHAR" property="blockName" />
    <result column="device_name" jdbcType="VARCHAR" property="deviceName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    a.id, a.device_addr, a.record_time, a.node_id, a.lng, a.lat, a.record_id, a.record_time_str, a.register_id,
    a.register_name, a.text, a.value, a.alarm_level, a.create_time, a.update_time, a.status,
    b.id as block_id, b.`name` as block_name, f.unit, d.device_name
  </sql>
  <select id="selectByExample" parameterType="com.digital.fishery.model.DeviceNodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device_node a
    left join device d on d.device_addr = a.device_addr
    left join info_block b on b.id = d.block_id
    left join device_factor f on f.device_addr = a.device_addr and f.node_id = a.node_id
    and f.register_id = a.register_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from device_node a
    left join device d on d.device_addr = a.device_addr
    left join info_block b on b.id = d.block_id
    left join device_factor f on f.device_addr = a.device_addr and f.node_id = a.node_id
    and f.register_id = a.register_id
    where a.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from device_node
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.digital.fishery.model.DeviceNodeExample">
    delete from device_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.digital.fishery.model.DeviceNode">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into device_node (device_addr, record_time, node_id, 
      lng, lat, record_id, record_time_str, 
      register_id, register_name, text, 
      value, alarm_level, create_time, 
      update_time, status)
    values (#{deviceAddr,jdbcType=INTEGER}, #{recordTime,jdbcType=TIMESTAMP}, #{nodeId,jdbcType=INTEGER}, 
      #{lng,jdbcType=DOUBLE}, #{lat,jdbcType=DOUBLE}, #{recordId,jdbcType=VARCHAR}, #{recordTimeStr,jdbcType=VARCHAR}, 
      #{registerId,jdbcType=INTEGER}, #{registerName,jdbcType=VARCHAR}, #{text,jdbcType=VARCHAR}, 
      #{value,jdbcType=DOUBLE}, #{alarmLevel,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.digital.fishery.model.DeviceNode">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into device_node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="deviceAddr != null">
        device_addr,
      </if>
      <if test="recordTime != null">
        record_time,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="lng != null">
        lng,
      </if>
      <if test="lat != null">
        lat,
      </if>
      <if test="recordId != null">
        record_id,
      </if>
      <if test="recordTimeStr != null">
        record_time_str,
      </if>
      <if test="registerId != null">
        register_id,
      </if>
      <if test="registerName != null">
        register_name,
      </if>
      <if test="text != null">
        text,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="alarmLevel != null">
        alarm_level,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="deviceAddr != null">
        #{deviceAddr,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null">
        #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="lng != null">
        #{lng,jdbcType=DOUBLE},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=DOUBLE},
      </if>
      <if test="recordId != null">
        #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="recordTimeStr != null">
        #{recordTimeStr,jdbcType=VARCHAR},
      </if>
      <if test="registerId != null">
        #{registerId,jdbcType=INTEGER},
      </if>
      <if test="registerName != null">
        #{registerName,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=DOUBLE},
      </if>
      <if test="alarmLevel != null">
        #{alarmLevel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.digital.fishery.model.DeviceNodeExample" resultType="java.lang.Long">
    select count(*) from device_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update device_node
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.deviceAddr != null">
        device_addr = #{record.deviceAddr,jdbcType=INTEGER},
      </if>
      <if test="record.recordTime != null">
        record_time = #{record.recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=INTEGER},
      </if>
      <if test="record.lng != null">
        lng = #{record.lng,jdbcType=DOUBLE},
      </if>
      <if test="record.lat != null">
        lat = #{record.lat,jdbcType=DOUBLE},
      </if>
      <if test="record.recordId != null">
        record_id = #{record.recordId,jdbcType=VARCHAR},
      </if>
      <if test="record.recordTimeStr != null">
        record_time_str = #{record.recordTimeStr,jdbcType=VARCHAR},
      </if>
      <if test="record.registerId != null">
        register_id = #{record.registerId,jdbcType=INTEGER},
      </if>
      <if test="record.registerName != null">
        register_name = #{record.registerName,jdbcType=VARCHAR},
      </if>
      <if test="record.text != null">
        text = #{record.text,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=DOUBLE},
      </if>
      <if test="record.alarmLevel != null">
        alarm_level = #{record.alarmLevel,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update device_node
    set id = #{record.id,jdbcType=BIGINT},
      device_addr = #{record.deviceAddr,jdbcType=INTEGER},
      record_time = #{record.recordTime,jdbcType=TIMESTAMP},
      node_id = #{record.nodeId,jdbcType=INTEGER},
      lng = #{record.lng,jdbcType=DOUBLE},
      lat = #{record.lat,jdbcType=DOUBLE},
      record_id = #{record.recordId,jdbcType=VARCHAR},
      record_time_str = #{record.recordTimeStr,jdbcType=VARCHAR},
      register_id = #{record.registerId,jdbcType=INTEGER},
      register_name = #{record.registerName,jdbcType=VARCHAR},
      text = #{record.text,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=DOUBLE},
      alarm_level = #{record.alarmLevel,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.digital.fishery.model.DeviceNode">
    update device_node
    <set>
      <if test="deviceAddr != null">
        device_addr = #{deviceAddr,jdbcType=INTEGER},
      </if>
      <if test="recordTime != null">
        record_time = #{recordTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="lng != null">
        lng = #{lng,jdbcType=DOUBLE},
      </if>
      <if test="lat != null">
        lat = #{lat,jdbcType=DOUBLE},
      </if>
      <if test="recordId != null">
        record_id = #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="recordTimeStr != null">
        record_time_str = #{recordTimeStr,jdbcType=VARCHAR},
      </if>
      <if test="registerId != null">
        register_id = #{registerId,jdbcType=INTEGER},
      </if>
      <if test="registerName != null">
        register_name = #{registerName,jdbcType=VARCHAR},
      </if>
      <if test="text != null">
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=DOUBLE},
      </if>
      <if test="alarmLevel != null">
        alarm_level = #{alarmLevel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.digital.fishery.model.DeviceNode">
    update device_node
    set device_addr = #{deviceAddr,jdbcType=INTEGER},
      record_time = #{recordTime,jdbcType=TIMESTAMP},
      node_id = #{nodeId,jdbcType=INTEGER},
      lng = #{lng,jdbcType=DOUBLE},
      lat = #{lat,jdbcType=DOUBLE},
      record_id = #{recordId,jdbcType=VARCHAR},
      record_time_str = #{recordTimeStr,jdbcType=VARCHAR},
      register_id = #{registerId,jdbcType=INTEGER},
      register_name = #{registerName,jdbcType=VARCHAR},
      text = #{text,jdbcType=VARCHAR},
      value = #{value,jdbcType=DOUBLE},
      alarm_level = #{alarmLevel,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>