<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digital.fishery.mapper.FarmSaleMapper">
  <resultMap id="BaseResultMap" type="com.digital.fishery.model.FarmSale">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="block_id" jdbcType="BIGINT" property="blockId" />
    <result column="block_name" jdbcType="VARCHAR" property="blockName" />
    <result column="product_category_id" jdbcType="BIGINT" property="productCategoryId" />
    <result column="product_category_name" jdbcType="VARCHAR" property="productCategoryName" />
    <result column="sale_time" jdbcType="TIMESTAMP" property="saleTime" />
    <result column="destination" jdbcType="VARCHAR" property="destination" />
    <result column="customer" jdbcType="VARCHAR" property="customer" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="quantity" jdbcType="BIGINT" property="quantity" />
    <result column="unit_price" jdbcType="DOUBLE" property="unitPrice" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    a.id, a.create_time, a.block_id, a.product_category_id, a.sale_time, a.destination, a.customer,
    a.customer_phone, a.quantity, a.unit_price, a.amount, a.unit, b.name as block_name, p.name as product_category_name
  </sql>
  <select id="selectByExample" parameterType="com.digital.fishery.model.FarmSaleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from farm_sale a
    left join info_block b on b.id = a.block_id
    left join info_product_category p on p.id = a.product_category_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from farm_sale a
    left join info_block b on b.id = a.block_id
    left join info_product_category p on p.id = a.product_category_id
    where a.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from farm_sale
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.digital.fishery.model.FarmSaleExample">
    delete from farm_sale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.digital.fishery.model.FarmSale">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into farm_sale (create_time, block_id, product_category_id, 
      sale_time, destination, customer, 
      customer_phone, quantity, unit_price, 
      amount, unit)
    values (#{createTime,jdbcType=TIMESTAMP}, #{blockId,jdbcType=BIGINT}, #{productCategoryId,jdbcType=BIGINT}, 
      #{saleTime,jdbcType=TIMESTAMP}, #{destination,jdbcType=VARCHAR}, #{customer,jdbcType=VARCHAR}, 
      #{customerPhone,jdbcType=VARCHAR}, #{quantity,jdbcType=BIGINT}, #{unitPrice,jdbcType=DOUBLE}, 
      #{amount,jdbcType=DOUBLE}, #{unit,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.digital.fishery.model.FarmSale">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into farm_sale
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        create_time,
      </if>
      <if test="blockId != null">
        block_id,
      </if>
      <if test="productCategoryId != null">
        product_category_id,
      </if>
      <if test="saleTime != null">
        sale_time,
      </if>
      <if test="destination != null">
        destination,
      </if>
      <if test="customer != null">
        customer,
      </if>
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unit != null">
        unit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blockId != null">
        #{blockId,jdbcType=BIGINT},
      </if>
      <if test="productCategoryId != null">
        #{productCategoryId,jdbcType=BIGINT},
      </if>
      <if test="saleTime != null">
        #{saleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="destination != null">
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="customer != null">
        #{customer,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=BIGINT},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.digital.fishery.model.FarmSaleExample" resultType="java.lang.Long">
    select count(*) from farm_sale
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update farm_sale
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.blockId != null">
        block_id = #{record.blockId,jdbcType=BIGINT},
      </if>
      <if test="record.productCategoryId != null">
        product_category_id = #{record.productCategoryId,jdbcType=BIGINT},
      </if>
      <if test="record.saleTime != null">
        sale_time = #{record.saleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.destination != null">
        destination = #{record.destination,jdbcType=VARCHAR},
      </if>
      <if test="record.customer != null">
        customer = #{record.customer,jdbcType=VARCHAR},
      </if>
      <if test="record.customerPhone != null">
        customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=BIGINT},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update farm_sale
    set id = #{record.id,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      block_id = #{record.blockId,jdbcType=BIGINT},
      product_category_id = #{record.productCategoryId,jdbcType=BIGINT},
      sale_time = #{record.saleTime,jdbcType=TIMESTAMP},
      destination = #{record.destination,jdbcType=VARCHAR},
      customer = #{record.customer,jdbcType=VARCHAR},
      customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=BIGINT},
      unit_price = #{record.unitPrice,jdbcType=DOUBLE},
      amount = #{record.amount,jdbcType=DOUBLE},
      unit = #{record.unit,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.digital.fishery.model.FarmSale">
    update farm_sale
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blockId != null">
        block_id = #{blockId,jdbcType=BIGINT},
      </if>
      <if test="productCategoryId != null">
        product_category_id = #{productCategoryId,jdbcType=BIGINT},
      </if>
      <if test="saleTime != null">
        sale_time = #{saleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="destination != null">
        destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="customer != null">
        customer = #{customer,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=BIGINT},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DOUBLE},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.digital.fishery.model.FarmSale">
    update farm_sale
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      block_id = #{blockId,jdbcType=BIGINT},
      product_category_id = #{productCategoryId,jdbcType=BIGINT},
      sale_time = #{saleTime,jdbcType=TIMESTAMP},
      destination = #{destination,jdbcType=VARCHAR},
      customer = #{customer,jdbcType=VARCHAR},
      customer_phone = #{customerPhone,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=BIGINT},
      unit_price = #{unitPrice,jdbcType=DOUBLE},
      amount = #{amount,jdbcType=DOUBLE},
      unit = #{unit,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getHomeSaleData" resultType="com.alibaba.fastjson.JSONObject">
    select DATE_FORMAT(sale_time, "%Y-%m-%d") as saleDate, sum(amount) as saleAmount
    from farm_sale
    where 1
    <if test="blockIdList != null and blockIdList.size() > 0">
      and block_id IN
      <foreach item="item" index="index" collection="blockIdList" open="("  close=")" separator=",">
        #{item}
      </foreach>
    </if>
    <if test="startTime != null">
      and sale_time >= #{startTime,jdbcType=VARCHAR}
    </if>
    <if test="endTime != null">
      and sale_time &lt;= #{endTime,jdbcType=VARCHAR}
    </if>
    GROUP BY saleDate
  </select>
</mapper>